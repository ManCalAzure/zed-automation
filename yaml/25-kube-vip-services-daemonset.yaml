apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-vip-role
rules:
- apiGroups: [""]
  resources: ["services", "services/status", "endpoints", "nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-vip-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-vip-role
subjects:
- kind: ServiceAccount
  name: kube-vip
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip
  namespace: kube-system
spec:
  template:
    spec:
      hostNetwork: true
      containers:
        - name: kube-vip
          image: ghcr.io/kube-vip/kube-vip:v0.7.2
          args: ["manager","--services","--arp","--leaderElection"]
          env:
            - name: vip_interface
              value: "eth1"                 # already set for your LAN
            - name: KUBERNETES_SERVICE_HOST
              value: "10.245.0.1"         # ⬅️ a control-plane node IP
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          securityContext:
            capabilities:
              add: ["NET_ADMIN","NET_RAW"]

